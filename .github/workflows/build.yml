name: CI
on:
    push:
        branches-ignore:
            - master
    pull_request:
        branches:
            - master

env:
    APP_ENV: test

jobs:
    security-checker:
        name: Dependencies security check
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v2
            - name: Security checker
              uses: docker://damienlagae/phpqa:7.3
              with:
                  args: local-php-security-checker

    coding-standards:
        name: Coding standards check
        runs-on: ubuntu-latest
        steps:
            -   name: Checkout
                uses: actions/checkout@v2
            -   name: Code Sniffer [PHP-CS]
                uses: docker://damienlagae/phpqa:7.3
                with:
                    args: phpcs -v --standard=PSR2 ./src
            -   name: PHPStan
                uses: docker://damienlagae/phpqa:7.3
                with:
                    args: phpstan analyze ./src/ -l 8
            -   name: PHP Mess Detector
                uses: docker://damienlagae/phpqa:7.3
                with:
                    args: phpmd ./src/ ansi ./codesize.xml

    unit-tests:
        name: Unit Tests (PHP ${{ matrix.php-versions }})
        runs-on: ubuntu-latest
        needs: [ security-checker, coding-standards ]

        strategy:
            fail-fast: true
            matrix:
                php-versions: [ '7.3', '7.4', '8.0' ]
        steps:
            -   name: Checkout
                uses: actions/checkout@v2

            # https://github.com/shivammathur/setup-php (community)
            -   name: Setup PHP, extensions and composer with shivammathur/setup-php
                uses: shivammathur/setup-php@v2
                with:
                    php-version: ${{ matrix.php-versions }}
                env:
                    update: true

            # —— Composer 🧙‍️ —————————————————————————————————————————————————————————
            -   name: Validate composer.json and composer.lock
                run: composer validate

            -   name: Get composer cache directory
                id: composer-cache
                run: echo "::set-output name=dir::$(composer config cache-files-dir)"

            -   name: Cache composer dependencies
                uses: actions/cache@v1
                with:
                    path: ${{ steps.composer-cache.outputs.dir }}
                    key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
                    restore-keys: ${{ runner.os }}-composer-

            -   name: Install Composer dependencies
                run: composer install

            # —— Tests ✅ ———————————————————————————————————————————————————————————
            -   name: Run unit tests
                run: bin/phpunit -d memory_limit=-1 --testsuite Unit --stop-on-failure --testdox

    functional-tests:
        name: Functional Tests (PHP ${{ matrix.php-versions }})
        runs-on: ubuntu-latest
        needs: [ security-checker, coding-standards ]

        strategy:
            fail-fast: true
            matrix:
                php-versions: [ '7.3', '7.4', '8.0' ]
        steps:
            -   name: Checkout
                uses: actions/checkout@v2

            # https://github.com/shivammathur/setup-php (community)
            -   name: Setup PHP, extensions and composer with shivammathur/setup-php
                uses: shivammathur/setup-php@v2
                with:
                    php-version: ${{ matrix.php-versions }}
                env:
                    update: true

            # —— Composer 🧙‍️ —————————————————————————————————————————————————————————
            -   name: Validate composer.json and composer.lock
                run: composer validate

            -   name: Get composer cache directory
                id: composer-cache
                run: echo "::set-output name=dir::$(composer config cache-files-dir)"

            -   name: Cache composer dependencies
                uses: actions/cache@v1
                with:
                    path: ${{ steps.composer-cache.outputs.dir }}
                    key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
                    restore-keys: ${{ runner.os }}-composer-

            -   name: Install Composer dependencies
                run: composer install

            # —— Tests ✅ ———————————————————————————————————————————————————————————
            -   name: Run functionnal tests
                run: bin/phpunit -d memory_limit=-1 --testsuite Functional --stop-on-failure --testdox
